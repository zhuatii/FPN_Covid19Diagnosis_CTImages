{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3266479,"sourceType":"datasetVersion","datasetId":846913}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport torch\nfrom torch.utils.data import Dataset, DataLoader\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torchvision.models import resnet50, ResNet50_Weights\nfrom torchvision import transforms, io\nfrom torchvision.transforms import v2\nfrom sklearn.utils import shuffle\nfrom PIL import Image\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:04:28.655373Z","iopub.execute_input":"2024-07-09T17:04:28.655816Z","iopub.status.idle":"2024-07-09T17:04:36.725057Z","shell.execute_reply.started":"2024-07-09T17:04:28.655764Z","shell.execute_reply":"2024-07-09T17:04:36.723758Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"## Creating Custom Dataset for loading the data to the models","metadata":{}},{"cell_type":"code","source":"### Paths to the dataframe containing\n\ntrain_folds = [\"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/train1.csv\",\n              \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/train2.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/train3.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/train4.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/train5.csv\"]\n\nval_folds = [\"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/validation1.csv\",\n              \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/validation2.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/validation3.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/validation4.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/validation5.csv\"]\n\ntest_folds = [\"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/test1.csv\",\n              \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/test2.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/test3.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/test4.csv\",\n             \"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/Annotation/CSV/test5.csv\"]","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:04:36.727878Z","iopub.execute_input":"2024-07-09T17:04:36.728861Z","iopub.status.idle":"2024-07-09T17:04:36.737138Z","shell.execute_reply.started":"2024-07-09T17:04:36.728806Z","shell.execute_reply":"2024-07-09T17:04:36.735406Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"class DataClass(Dataset):\n    \n    def __init__(self, annotations, transform = None):\n        self.df = pd.read_csv(annotations)\n        self.transform = transform\n        \n    def __getitem__(self, idx):\n        img_path = \"/\".join([\"/kaggle/input/covidctset-a-large-covid19-ct-scans-dataset/TrainValidation\",self.df.iloc[idx, 0]])\n        label = self.df.iloc[idx, 1]\n        image = Image.open(img_path)\n\n        if self.transform:\n            image = self.transform(image)\n        \n        return image, label\n    \n    def __len__(self):\n        return len(self.df)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:05:03.202123Z","iopub.execute_input":"2024-07-09T17:05:03.202528Z","iopub.status.idle":"2024-07-09T17:05:03.214217Z","shell.execute_reply.started":"2024-07-09T17:05:03.202498Z","shell.execute_reply":"2024-07-09T17:05:03.212968Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train_transforms = v2.Compose([\n    v2.ToDtype(torch.float32, scale=True),\n    v2.RandomHorizontalFlip(),\n    v2.RandomVerticalFlip(),\n    v2.RandomRotation(360),\n    v2.RandomAffine(degrees=0, translate=(0.05, 0.05), shear=0.05)\n#     v2.ToDtype(torch.float32, scale=True)\n])\n\ntest_transforms = v2.Compose([v2.ToDtype(torch.float32, scale=True)])","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:23:23.387053Z","iopub.execute_input":"2024-07-09T17:23:23.387476Z","iopub.status.idle":"2024-07-09T17:23:23.394981Z","shell.execute_reply.started":"2024-07-09T17:23:23.387444Z","shell.execute_reply":"2024-07-09T17:23:23.393670Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"i = 0\nTrainDataClass = DataClass(train_folds[i], train_transforms)\nValDataClass = DataClass(val_folds[i], test_transforms)\nTestDataClass = DataClass(test_folds[i], test_transforms)\n\nshape=(512,512,1)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:23:37.365409Z","iopub.execute_input":"2024-07-09T17:23:37.365818Z","iopub.status.idle":"2024-07-09T17:23:37.397438Z","shell.execute_reply.started":"2024-07-09T17:23:37.365770Z","shell.execute_reply":"2024-07-09T17:23:37.396529Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"TrainDataLoader = DataLoader(TrainDataClass, batch_size = 14, shuffle = True)\nValDataLoader = DataLoader(ValDataClass, batch_size = 10, shuffle = False)\nTestDataLoader = DataLoader(TestDataClass, batch_size = 10, shuffle = False)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:23:40.655662Z","iopub.execute_input":"2024-07-09T17:23:40.656092Z","iopub.status.idle":"2024-07-09T17:23:40.662645Z","shell.execute_reply.started":"2024-07-09T17:23:40.656061Z","shell.execute_reply":"2024-07-09T17:23:40.661213Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"code","source":"class FPNModel(nn.Module):\n    \n    def __init__(self, num_classes = 2, feature_size = 256):\n        super(FPNModel).__init__()\n        \n        self.backbone = models.resnet50(weights=ResNet50_Weights.IMAGENET1K_V2)\n        \n        ","metadata":{"execution":{"iopub.status.busy":"2024-07-08T18:42:07.577646Z","iopub.execute_input":"2024-07-08T18:42:07.578492Z","iopub.status.idle":"2024-07-08T18:42:07.585232Z","shell.execute_reply.started":"2024-07-08T18:42:07.578442Z","shell.execute_reply":"2024-07-08T18:42:07.583940Z"},"trusted":true},"execution_count":152,"outputs":[{"execution_count":152,"output_type":"execute_result","data":{"text/plain":"<__main__.DataClass at 0x7f919645afe0>"},"metadata":{}}]}]}